1.install react

*npm -v
*npm --version

2. add header component
can use default props for its title and name,...
you can add boostrap to style
add button to the header, which can be another component

3. add tasks component
we put our task object array in App level because we want access to the from other components.

*learn redux
*array.map( () =>{} )  is function and should return something
*array.map( () =>() ) will do () for each array shouldnt return anything it can be component or tag ...

onClick={() => onDelete(task.id)} not             onClick={onDelete}(work onClick) nor (renders for every array item!)onClick={onDelete(task.id)} or onClick={onDelete()}

4. add remider function and style

more regex and backtick shit

5. add AddTask component to add Task! 

*make ./component/Button component reuseable!
* each input is going to have its own component level state

** when you what to return something
    if (!text) {
      alert("Enter a Task!");
    } else {
      addTask({ text, day, reminder });
    }
is worst version of:
    if (!text) {
      alert("Enter a Task!");
      return;
    }
    addTask({ text, day, reminder });

6. toggle add task form

** when you dont want to return anything just checking a condition

        {showAddTask && <AddTask addTask={addTask} />}


7. mock backend
json-server
